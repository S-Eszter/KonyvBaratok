# Generated by Django 3.0.3 on 2020-05-29 20:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    replaces = [('catalog', '0001_initial'), ('catalog', '0002_auto_20200220_1311'), ('catalog', '0003_auto_20200224_1347'), ('catalog', '0004_friendgroup'), ('catalog', '0005_auto_20200227_1457'), ('catalog', '0006_profile_name'), ('catalog', '0007_remove_profile_name'), ('catalog', '0008_auto_20200228_1349'), ('catalog', '0009_auto_20200228_1358'), ('catalog', '0010_auto_20200229_1259'), ('catalog', '0011_auto_20200229_1728'), ('catalog', '0012_auto_20200229_2118'), ('catalog', '0013_requestedfriend'), ('catalog', '0014_requestedfriend_request_notif'), ('catalog', '0015_auto_20200304_1431'), ('catalog', '0016_auto_20200305_0731'), ('catalog', '0017_requestedfriend_confirmed_request'), ('catalog', '0018_auto_20200311_1444'), ('catalog', '0019_auto_20200402_1519'), ('catalog', '0020_auto_20200407_1412'), ('catalog', '0021_requestedfriend_ignored_request'), ('catalog', '0022_auto_20200409_0654'), ('catalog', '0023_rejectedfriendship_notif_deleted'), ('catalog', '0024_profile'), ('catalog', '0025_auto_20200416_1358'), ('catalog', '0026_auto_20200416_1401'), ('catalog', '0027_book_comment'), ('catalog', '0028_auto_20200422_1321'), ('catalog', '0029_book_owner_nonuser'), ('catalog', '0030_auto_20200509_1337'), ('catalog', '0031_auto_20200509_1339'), ('catalog', '0032_auto_20200524_1718'), ('catalog', '0033_auto_20200525_0719'), ('catalog', '0034_auto_20200528_1310')]

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('last_name_author', models.CharField(max_length=100, verbose_name='Szerző vezetékneve')),
                ('first_name_author', models.CharField(max_length=100, verbose_name='Szerző keresztneve')),
                ('title', models.CharField(max_length=200, verbose_name='Cím')),
                ('recommended', models.BooleanField(default=False, help_text='Van ilyen könyved, és szívesen kölcsönadnád barátaidnak.', verbose_name='Ajánlom másoknak')),
                ('wished', models.BooleanField(default=False, help_text='Neked nincs meg, de szívesen elolvasnád.', verbose_name='Kívánságlistámra teszem')),
                ('loan_date', models.DateField(blank=True, null=True, verbose_name='Ezen a napon')),
                ('genre', models.ForeignKey(default='2', null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.Genre', verbose_name='Műfaj')),
                ('language', models.ForeignKey(default='11', null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.Language', verbose_name='Nyelv')),
                ('loaned', models.BooleanField(default=False, help_text='Csak ajánlott könyvet tudsz kölcsönadni. (Miután visszakaptad, csak "pipáld vissza" és mentsd el, az adatok törlődni fognak.)', verbose_name='Kölcsönadtam')),
                ('borrower', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='borrowed_book', to=settings.AUTH_USER_MODEL, verbose_name='Neki (felhasználó)')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='my_book', to=settings.AUTH_USER_MODEL)),
                ('borrower_nonuser', models.CharField(blank=True, help_text='Valaki, aki nem regisztrált felhasználó az oldalon vagy még nem a barátod.', max_length=200, null=True, verbose_name='Neki (nem-felhasználó)')),
                ('comment', models.TextField(blank=True, help_text='Ajánlott/kölcsönadott és kívánságlistádon szereplő könyveid esetében a barátaid ezt látják.', max_length=300, verbose_name='Komment')),
                ('owner_nonuser', models.CharField(blank=True, help_text='Valaki, aki nem regisztrált felhasználó az oldalon vagy még nem a barátod.', max_length=200, null=True, verbose_name='Nem-felhasználó')),
            ],
            options={
                'ordering': ['last_name_author', 'first_name_author', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmation_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('confirmed_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='confirmed_user', to=settings.AUTH_USER_MODEL)),
                ('requested_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RejectedFriendship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rejection_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('rejected', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rejected', to=settings.AUTH_USER_MODEL)),
                ('rejecter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rejecter', to=settings.AUTH_USER_MODEL)),
                ('notif_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default.jpg', upload_to='profile_pics')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('requested_friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_friend', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_user', to=settings.AUTH_USER_MODEL)),
                ('confirmed_request', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['request_datetime'],
            },
        ),
    ]
